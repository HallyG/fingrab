name: Docker Build

on:
  workflow_call:
      inputs:
        push_to_registry:
          description: 'Push to image GHCR?'
          required: false
          default: false
          type: boolean
        tags:
          description: 'Docker image tags (multiline string)'
          required: false
          type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  commit-hash:
    runs-on: ubuntu-24.04
    outputs:
      commit_hash: ${{ steps.get_commit.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Get commit hash
        id: get_commit
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
  docker:
    runs-on: ubuntu-24.04
    needs: 
      - commit-hash
    steps:
      - name: Github Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
      - name: Create image metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        id: docker-meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ inputs.tags || 'type=sha' }}
      - name: Set up build cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a
        name: Set up QEMU
      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5
        name: Set up Docker Buildx
      - name: Login to GitHub Container Registry
        if: ${{ inputs.push_to_registry }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}  
      - uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        name: Build and push
        id: push
        with:
          push: ${{ inputs.push_to_registry }}
          file: ./Dockerfile
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: type=local,mode=max,dest=/tmp/.docker-cache
      - name: Generate artifact attestation
        if: ${{ inputs.push_to_registry }}
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ inputs.push_to_registry }}